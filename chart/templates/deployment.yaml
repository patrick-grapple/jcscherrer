apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "myapp.fullname" . }}
  labels:
    {{- include "myapp.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  progressDeadlineSeconds: 1200
  selector:
    matchLabels:
      {{- include "myapp.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "myapp.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "myapp.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: {{ .Chart.Name }}-init
          image: "nicolaka/netshoot"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: REMOTE_ENTRY_URL
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Release.Namespace }}-{{ .Release.Name }}-gruim-muim"
                  key: remoteentry
          {{- if .Values.env }}
          {{- range .Values.env | uniq }}
            {{- if eq .name "DEV" }}
              {{- if not .value }}
            - name: SVELTE_APP_REMOTE_URL
              valueFrom:
                configMapKeyRef:
                  name: "{{ $.Release.Namespace }}-{{ $.Release.Name }}-gruim-muim"
                  key: remoteentry
              {{- end }}
            {{- end }}
          {{- end }}
          {{- end }}
          {{- if .Values.env }}
            {{- toYaml .Values.env | nindent 12 }}
          {{- end }}
          command:
            - sh
            - -c
            - |
              echo "wait for grapple resource to become available"
              if [[ -z "${SVELTE_APP_REMOTE_URL}" ]] && [[ "${REMOTE_ENTRY_URL}" != "" ]]; then
                  export SVELTE_APP_REMOTE_URL=$(echo ${REMOTE_ENTRY_URL} | sed "s,/remoteEntry.js,,g")
              fi
              echo "testing: curl -k -Is ${SVELTE_APP_REMOTE_URL}/dashboard.json | head -1"
              # timeout 600 sh -c "while ! curl -k -Is ${SVELTE_APP_REMOTE_URL}/dashboard.json 2>/dev/null | head -1 | grep 200; do sleep 1; echo -n '.'; done" || echo "\n\nERROR: could not reach: ${SVELTE_APP_REMOTE_URL}/dashboard.json after 10 minutes"
              while ! curl -k -Is ${SVELTE_APP_REMOTE_URL}/dashboard.json 2>/dev/null | head -1 | grep 200; do
                  sleep 1
                  echo -n '.'
              done || echo "\n\nERROR: could not reach: ${SVELTE_APP_REMOTE_URL}/dashboard.json after 10 minutes"
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: REMOTE_ENTRY_URL
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Release.Namespace }}-{{ .Release.Name }}-gruim-muim"
                  key: remoteentry
          {{- range .Values.env | uniq }}
            {{- if eq .name "DEV" }}
              {{- if not .value }}
            - name: SVELTE_APP_REMOTE_URL
              valueFrom:
                configMapKeyRef:
                  name: "{{ $.Release.Namespace }}-{{ $.Release.Name }}-gruim-muim"
                  key: remoteentry
              {{- end }}
            {{- end }}
          {{- end }}
          {{- if .Values.env }}
            {{- toYaml .Values.env | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 500
            periodSeconds: 10
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /
              port: 80
            failureThreshold: 200
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
